Description:

For this enhancement model, it follows the common QA approach including question processing, passage retrieval and answer extraction.
As for the question processing, two main tasks are performed. The first one is answer type detection, which exploits semantic question information like part-of-speech tag to predict corresponding answer type. For this task, supervised machine learning method is used to train a classifier to predict the answer type of the test set question. The other task is query formulation where the keywords of the question are extracted to form a query to feed into the IR search engine. In this approach, we simply leave out the wh-words in the questions and the rest of the words are used as query terms.
For the passage retrieval, we simply use IR techniques to find relevant sentences and then based on the predicted answer type we filter out those sentences which are not likely containing the answer type.
In the answer extraction section, to extract the answer term exactly matching the correct answer. We have tried several approaches. Initially, as a basic assumption that factoid answer will not contain same words as in the question, thus we filter out the repeated words occurring in both question and sentence candidates. Then we make attempt to return the first NN or NNP word matching the question focus as the answer, but we recognise that most of correct answers consist of multiple words. Then we try to get ngram of the sentence candidate and return the ngram with the most NN or NNP terms as the answer. Unfortunately, the size of correct answer varies from one another and it is not accurate to specify the number of words to be returned. By observing the error, it is obvious that most of time we can get the correct sentence candidates, however, the problem arise when we choose which words we return as the correct answer. Therefore, we come up with an idea that we can make use of the same words appearing in both question and sentence to get the index span of the sentence, where the answer should outside the range of the span index. Next we can get the answer with various size by applying POS tag to the rest of words in the sentence.
Finally the answer with the highest scores are returned by applying several rules to limit the choices of candidates. 
